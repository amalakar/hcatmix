<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration debug="false" xmlns:log4j="http://jakarta.apache.org/log4j/">
    <!--
      This default ConsoleAppender is used to log all NON perf4j messages
      to System.out
    -->
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%-5p %c{1} - %m%n"/>
        </layout>
    </appender>

    <!-- Perf4J appenders -->
    <!--
      This AsyncCoalescingStatisticsAppender groups StopWatch log messages
      into GroupedTimingStatistics messages which it sends on the
      file appender defined below
    -->
    <appender name="CoalescingStatistics"
              class="org.perf4j.log4j.AsyncCoalescingStatisticsAppender">
        <!--
          The TimeSlice option is used to determine the time window for which
          all received StopWatch logs are aggregated to create a single
          GroupedTimingStatistics log. Here we set it to 10 seconds, overriding
          the default of 30000 ms
        -->
        <param name="TimeSlice" value="10000"/>
        <appender-ref ref="fileAppender"/>
        <!--
          Note how the GraphingStatisticsAppenders have been attached to the
          CoalescingStatistics here.
        -->
        <!--<appender-ref ref="graphExecutionTimes"/>-->
        <!--<appender-ref ref="graphExecutionTPS"/>-->
    </appender>

    <!-- This file appender is used to output aggregated performance statistics -->
    <appender name="fileAppender" class="org.apache.log4j.FileAppender">
        <param name="File" value="hcatMix-stats.log"/>
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="%m%n"/>
        </layout>
    </appender>

    <!--&lt;!&ndash;-->
      <!--This first GraphingStatisticsAppender graphs Mean execution times for the-->
      <!--firstBlock and secondBlock tags-->
    <!--&ndash;&gt;-->
    <!--<appender name="graphExecutionTimes"-->
              <!--class="org.perf4j.log4j.GraphingStatisticsAppender">-->
        <!--&lt;!&ndash; Possible GraphTypes are Mean, Min, Max, StdDev, Count and TPS &ndash;&gt;-->
        <!--<param name="GraphType" value="Mean"/>-->
        <!--&lt;!&ndash; The tags of the timed execution blocks to graph are specified here &ndash;&gt;-->
        <!--<param name="TagNamesToGraph" value="firstBlock,secondBlock"/>-->
        <!--<appender-ref ref="graphsFileAppender"/>-->
    <!--</appender>-->

    <!--&lt;!&ndash;-->
      <!--This second GraphingStatisticsAppender graphs transactions per second-->
      <!--for the firstBlock and secondBlock tags-->
    <!--&ndash;&gt;-->
    <!--<appender name="graphExecutionTPS"-->
              <!--class="org.perf4j.log4j.GraphingStatisticsAppender">-->
        <!--<param name="GraphType" value="Mean"/>-->
        <!--<param name="TagNamesToGraph" value="firstBlock,secondBlock"/>-->
        <!--<appender-ref ref="graphsFileAppender"/>-->
    <!--</appender>-->

    <!--&lt;!&ndash;-->
      <!--This file appender is used to output the graph URLs generated-->
      <!--by the GraphingStatisticsAppenders-->
    <!--&ndash;&gt;-->
    <!--<appender name="graphsFileAppender" class="org.apache.log4j.FileAppender">-->
        <!--<param name="File" value="perfGraphs.log"/>-->
        <!--<layout class="org.apache.log4j.PatternLayout">-->
            <!--<param name="ConversionPattern" value="%m%n"/>-->
        <!--</layout>-->
    <!--</appender>-->

    <!-- Loggers -->
    <!--
      The Perf4J logger. Note that org.perf4j.TimingLogger is the value of the
      org.perf4j.StopWatch.DEFAULT_LOGGER_NAME constant. Also, note that
      additivity is set to false, which is usually what is desired - this means
      that timing statements will only be sent to this logger and NOT to
      upstream loggers.
    -->
    <logger name="org.perf4j.TimingLogger" additivity="false">
        <level value="INFO"/>
        <appender-ref ref="CoalescingStatistics"/>
    </logger>

    <!--
      The root logger sends all log statements EXCEPT those sent to the perf4j
      logger to System.out.
    -->
    <root>
        <level value="INFO"/>
        <appender-ref ref="console"/>
    </root>
</log4j:configuration>
